# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from proto import daztl_service_pb2 as proto_dot_daztl__service__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/daztl_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MusicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/daztl.MusicService/RegisterUser',
                request_serializer=proto_dot_daztl__service__pb2.RegisterRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.UpdateProfile = channel.unary_unary(
                '/daztl.MusicService/UpdateProfile',
                request_serializer=proto_dot_daztl__service__pb2.UpdateProfileRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/daztl.MusicService/LoginUser',
                request_serializer=proto_dot_daztl__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.ListSongs = channel.unary_unary(
                '/daztl.MusicService/ListSongs',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.SongListResponse.FromString,
                _registered_method=True)
        self.GetSong = channel.unary_unary(
                '/daztl.MusicService/GetSong',
                request_serializer=proto_dot_daztl__service__pb2.SongIdRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.SongResponse.FromString,
                _registered_method=True)
        self.ListAlbums = channel.unary_unary(
                '/daztl.MusicService/ListAlbums',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.AlbumListResponse.FromString,
                _registered_method=True)
        self.ListArtists = channel.unary_unary(
                '/daztl.MusicService/ListArtists',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.ArtistListResponse.FromString,
                _registered_method=True)
        self.CreatePlaylist = channel.unary_unary(
                '/daztl.MusicService/CreatePlaylist',
                request_serializer=proto_dot_daztl__service__pb2.CreatePlaylistRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.GetPlaylist = channel.unary_unary(
                '/daztl.MusicService/GetPlaylist',
                request_serializer=proto_dot_daztl__service__pb2.PlaylistIdRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.PlaylistResponse.FromString,
                _registered_method=True)
        self.AddSongToPlaylist = channel.unary_unary(
                '/daztl.MusicService/AddSongToPlaylist',
                request_serializer=proto_dot_daztl__service__pb2.AddSongToPlaylistRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.GetPlaylistDetail = channel.unary_unary(
                '/daztl.MusicService/GetPlaylistDetail',
                request_serializer=proto_dot_daztl__service__pb2.PlaylistDetailRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.PlaylistDetailResponse.FromString,
                _registered_method=True)
        self.UploadSong = channel.unary_unary(
                '/daztl.MusicService/UploadSong',
                request_serializer=proto_dot_daztl__service__pb2.UploadSongRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.UploadAlbum = channel.unary_unary(
                '/daztl.MusicService/UploadAlbum',
                request_serializer=proto_dot_daztl__service__pb2.UploadAlbumRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.ArtistReport = channel.unary_unary(
                '/daztl.MusicService/ArtistReport',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.ReportResponse.FromString,
                _registered_method=True)
        self.SystemReport = channel.unary_unary(
                '/daztl.MusicService/SystemReport',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.ReportResponse.FromString,
                _registered_method=True)
        self.ListChatMessages = channel.unary_unary(
                '/daztl.MusicService/ListChatMessages',
                request_serializer=proto_dot_daztl__service__pb2.ChatMessageRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.ChatListResponse.FromString,
                _registered_method=True)
        self.SendChatMessage = channel.unary_unary(
                '/daztl.MusicService/SendChatMessage',
                request_serializer=proto_dot_daztl__service__pb2.SendChatRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.LikeArtist = channel.unary_unary(
                '/daztl.MusicService/LikeArtist',
                request_serializer=proto_dot_daztl__service__pb2.ArtistIdRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.IsArtistLiked = channel.unary_unary(
                '/daztl.MusicService/IsArtistLiked',
                request_serializer=proto_dot_daztl__service__pb2.ArtistIdRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.LikeStatusResponse.FromString,
                _registered_method=True)
        self.SearchSongs = channel.unary_unary(
                '/daztl.MusicService/SearchSongs',
                request_serializer=proto_dot_daztl__service__pb2.SearchRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.SongListResponse.FromString,
                _registered_method=True)
        self.GetProfile = channel.unary_unary(
                '/daztl.MusicService/GetProfile',
                request_serializer=proto_dot_daztl__service__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.UserProfileResponse.FromString,
                _registered_method=True)
        self.RefreshToken = channel.unary_unary(
                '/daztl.MusicService/RefreshToken',
                request_serializer=proto_dot_daztl__service__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=proto_dot_daztl__service__pb2.LoginResponse.FromString,
                _registered_method=True)


class MusicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAlbums(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListArtists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSongToPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylistDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadAlbum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ArtistReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChatMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LikeArtist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsArtistLiked(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MusicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=proto_dot_daztl__service__pb2.RegisterRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'UpdateProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfile,
                    request_deserializer=proto_dot_daztl__service__pb2.UpdateProfileRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=proto_dot_daztl__service__pb2.LoginRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.LoginResponse.SerializeToString,
            ),
            'ListSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSongs,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.SongListResponse.SerializeToString,
            ),
            'GetSong': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSong,
                    request_deserializer=proto_dot_daztl__service__pb2.SongIdRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.SongResponse.SerializeToString,
            ),
            'ListAlbums': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAlbums,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.AlbumListResponse.SerializeToString,
            ),
            'ListArtists': grpc.unary_unary_rpc_method_handler(
                    servicer.ListArtists,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.ArtistListResponse.SerializeToString,
            ),
            'CreatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaylist,
                    request_deserializer=proto_dot_daztl__service__pb2.CreatePlaylistRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'GetPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylist,
                    request_deserializer=proto_dot_daztl__service__pb2.PlaylistIdRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.PlaylistResponse.SerializeToString,
            ),
            'AddSongToPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSongToPlaylist,
                    request_deserializer=proto_dot_daztl__service__pb2.AddSongToPlaylistRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'GetPlaylistDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylistDetail,
                    request_deserializer=proto_dot_daztl__service__pb2.PlaylistDetailRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.PlaylistDetailResponse.SerializeToString,
            ),
            'UploadSong': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadSong,
                    request_deserializer=proto_dot_daztl__service__pb2.UploadSongRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'UploadAlbum': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadAlbum,
                    request_deserializer=proto_dot_daztl__service__pb2.UploadAlbumRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'ArtistReport': grpc.unary_unary_rpc_method_handler(
                    servicer.ArtistReport,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.ReportResponse.SerializeToString,
            ),
            'SystemReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemReport,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.ReportResponse.SerializeToString,
            ),
            'ListChatMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChatMessages,
                    request_deserializer=proto_dot_daztl__service__pb2.ChatMessageRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.ChatListResponse.SerializeToString,
            ),
            'SendChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChatMessage,
                    request_deserializer=proto_dot_daztl__service__pb2.SendChatRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'LikeArtist': grpc.unary_unary_rpc_method_handler(
                    servicer.LikeArtist,
                    request_deserializer=proto_dot_daztl__service__pb2.ArtistIdRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.GenericResponse.SerializeToString,
            ),
            'IsArtistLiked': grpc.unary_unary_rpc_method_handler(
                    servicer.IsArtistLiked,
                    request_deserializer=proto_dot_daztl__service__pb2.ArtistIdRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.LikeStatusResponse.SerializeToString,
            ),
            'SearchSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchSongs,
                    request_deserializer=proto_dot_daztl__service__pb2.SearchRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.SongListResponse.SerializeToString,
            ),
            'GetProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfile,
                    request_deserializer=proto_dot_daztl__service__pb2.Empty.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.UserProfileResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=proto_dot_daztl__service__pb2.RefreshTokenRequest.FromString,
                    response_serializer=proto_dot_daztl__service__pb2.LoginResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'daztl.MusicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('daztl.MusicService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MusicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/RegisterUser',
            proto_dot_daztl__service__pb2.RegisterRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/UpdateProfile',
            proto_dot_daztl__service__pb2.UpdateProfileRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/LoginUser',
            proto_dot_daztl__service__pb2.LoginRequest.SerializeToString,
            proto_dot_daztl__service__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/ListSongs',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.SongListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/GetSong',
            proto_dot_daztl__service__pb2.SongIdRequest.SerializeToString,
            proto_dot_daztl__service__pb2.SongResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAlbums(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/ListAlbums',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.AlbumListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListArtists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/ListArtists',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.ArtistListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/CreatePlaylist',
            proto_dot_daztl__service__pb2.CreatePlaylistRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/GetPlaylist',
            proto_dot_daztl__service__pb2.PlaylistIdRequest.SerializeToString,
            proto_dot_daztl__service__pb2.PlaylistResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddSongToPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/AddSongToPlaylist',
            proto_dot_daztl__service__pb2.AddSongToPlaylistRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylistDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/GetPlaylistDetail',
            proto_dot_daztl__service__pb2.PlaylistDetailRequest.SerializeToString,
            proto_dot_daztl__service__pb2.PlaylistDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/UploadSong',
            proto_dot_daztl__service__pb2.UploadSongRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadAlbum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/UploadAlbum',
            proto_dot_daztl__service__pb2.UploadAlbumRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ArtistReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/ArtistReport',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.ReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SystemReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/SystemReport',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.ReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListChatMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/ListChatMessages',
            proto_dot_daztl__service__pb2.ChatMessageRequest.SerializeToString,
            proto_dot_daztl__service__pb2.ChatListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/SendChatMessage',
            proto_dot_daztl__service__pb2.SendChatRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LikeArtist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/LikeArtist',
            proto_dot_daztl__service__pb2.ArtistIdRequest.SerializeToString,
            proto_dot_daztl__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IsArtistLiked(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/IsArtistLiked',
            proto_dot_daztl__service__pb2.ArtistIdRequest.SerializeToString,
            proto_dot_daztl__service__pb2.LikeStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/SearchSongs',
            proto_dot_daztl__service__pb2.SearchRequest.SerializeToString,
            proto_dot_daztl__service__pb2.SongListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/GetProfile',
            proto_dot_daztl__service__pb2.Empty.SerializeToString,
            proto_dot_daztl__service__pb2.UserProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/daztl.MusicService/RefreshToken',
            proto_dot_daztl__service__pb2.RefreshTokenRequest.SerializeToString,
            proto_dot_daztl__service__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
